version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    restart: unless-stopped
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    restart: unless-stopped
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  data-gen:
    build: ./data-gen
    image: data-gen
    container_name: data-gen
    restart: unless-stopped
    depends_on:
      - broker
    network_mode: "host"

  mysql5:
    container_name: mysql5
    image: mysql/mysql-server:5.7
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=secret1
      - MYSQL_DATABASE=demo
      - MYSQL_USER=demo
      - MYSQL_PASSWORD=secret2
    ports:
      - '33060:3306'
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d

  kafka-consumer:
    build: ./consumer
    image: kafka-consumer
    container_name: kafka-consumer
    restart: unless-stopped
    depends_on:
      - data-gen
    network_mode: "host"

  api:
    build: ./api-service
    image: api-service
    container_name: api-service
    restart: unless-stopped
    depends_on:
      - kafka-consumer
      - mysql5
    ports:
      - "8080:8080"
